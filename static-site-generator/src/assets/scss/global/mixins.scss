@use './variables' as *;
@use 'sass:math';

// Media Query
@mixin mxMediaQueryXs() {
  @media screen and (min-width: $blakepoint-xs), print {
    @content;
  }
}

@mixin mxMediaQuerySm() {
  @media screen and (min-width: $blakepoint-sm), print {
    @content;
  }
}

@mixin mxMediaQueryMd() {
  @media screen and (min-width: $blakepoint-md), print {
    @content;
  }
}

@mixin mxMediaQueryLg() {
  @media screen and (min-width: $blakepoint-lg), print {
    @content;
  }
}

@mixin mxMediaQueryXl() {
  @media screen and (min-width: $blakepoint-xl), print {
    @content;
  }
}

@mixin mxMediaQueryXxl() {
  @media screen and (min-width: $blakepoint-xxl), print {
    @content;
  }
}

@mixin mxMediaQueryPrint() {
  @media print {
    @content;
  }
}

@mixin mxMediaHover() {
  @media (hover: hover) {
    @content;
  }
}

// Font
@mixin mxGetFontSize($font-size-px) {
  font-size: math.div($font-size-px, $font-size) * 1rem;
}

// Lists
@mixin mxGetMarginListItems($margin-top, $margin-left) {
  margin: (-$margin-top) 0 0 (-$margin-left);
}

@mixin mxGetPaddingListItem($padding-top, $padding-left) {
  padding: $padding-top 0 0 $padding-left;
}

// Arrow
@mixin mxArrowLine($width-and-height, $border-width, $border-color, $deg) {
  border-bottom: $border-width solid $border-color;
  border-left: $border-width solid $border-color;
  content: '';
  display: block;
  height: $width-and-height;
  transition: 0.3s border-color, 0.3s transform;
  width: $width-and-height;

  @if  $deg != '' {
    transform: rotate($deg);
  }
  @content;
}

// Triangle
@mixin mxTriangle($width, $height, $border-color, $deg) {
  border-left: math.div($width, 2) solid transparent;
  border-right: math.div($width, 2) solid transparent;
  border-top: $height solid $border-color;
  content: '';
  display: block;
  position: absolute;
  transition: 0.3s border-color, 0.3s transform;

  @if  $deg != '' {
    transform: rotate($deg);
  }
  @content;
}
